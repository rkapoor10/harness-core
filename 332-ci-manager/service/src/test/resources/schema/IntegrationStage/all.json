{
  "type": "object",
  "required": [
    "identifier",
    "name",
    "type"
  ],
  "properties": {
    "delegateSelectors": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string",
          "pattern": "(<\\+.+>.*)",
          "minLength": 1
        }
      ]
    },
    "description": {
      "type": "string"
    },
    "failureStrategies": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategyConfig"
          }
        },
        {
          "type": "string",
          "pattern": "^<\\+input>$",
          "minLength": 1
        }
      ]
    },
    "identifier": {
      "type": "string",
      "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
    },
    "name": {
      "type": "string",
      "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
    },
    "pipelineVariables": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/NumberNGVariable"
          },
          {
            "$ref": "#/definitions/SecretNGVariable"
          },
          {
            "$ref": "#/definitions/StringNGVariable"
          }
        ]
      }
    },
    "strategy": {
      "oneOf": [
        {
          "$ref": "#/definitions/StrategyConfig"
        },
        {
          "type": "string",
          "pattern": "^<\\+input>$",
          "minLength": 1
        }
      ]
    },
    "tags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "type": {
      "type": "string",
      "enum": [
        "CI"
      ]
    },
    "variables": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/NumberNGVariable"
          },
          {
            "$ref": "#/definitions/SecretNGVariable"
          },
          {
            "$ref": "#/definitions/StringNGVariable"
          }
        ]
      }
    },
    "when": {
      "oneOf": [
        {
          "$ref": "#/definitions/StageWhenCondition"
        },
        {
          "type": "string",
          "pattern": "^<\\+input>$",
          "minLength": 1
        }
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "allOf": [
    {
      "if": {
        "properties": {
          "type": {
            "const": "CI"
          }
        }
      },
      "then": {
        "properties": {
          "spec": {
            "$ref": "#/definitions/IntegrationStageConfigImpl"
          }
        }
      }
    }
  ],
  "definitions": {
    "ACRStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "repository",
            "tags"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "remoteCacheImage": {
              "type": "string"
            },
            "repository": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "subscriptionId": {
              "type": "string"
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AbortFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Abort"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ActionStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "uses"
          ],
          "properties": {
            "env": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            },
            "uses": {
              "type": "string"
            },
            "with": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ActionStepInfoV1": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "uses"
          ],
          "properties": {
            "envs": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            },
            "outputs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "uses": {
              "type": "string"
            },
            "with": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AquaTrivyStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Attestation": {
      "type": "object",
      "properties": {
        "privateKey": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "cosign"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "cosign"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CosignAttestation"
              }
            }
          }
        }
      ]
    },
    "AttestationSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsEcrStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsSecurityHubStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BackgroundStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "command": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "entrypoint": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "portBindings": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "reports": {
              "oneOf": [
                {
                  "$ref": "#/definitions/UnitTestReport"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Sh",
                    "Bash",
                    "Powershell",
                    "Pwsh",
                    "Python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BackgroundStepInfoV1": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "run"
          ],
          "properties": {
            "args": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "entrypoint": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "entrypointList": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "envs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "network": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "ports": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "pull": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "always",
                    "never",
                    "if-not-exists"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "run": {
              "type": "string"
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "sh",
                    "bash",
                    "powershell",
                    "pwsh",
                    "python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "user": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BanditStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitriseStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "uses"
          ],
          "properties": {
            "env": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            },
            "uses": {
              "type": "string"
            },
            "with": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitriseStepInfoV1": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "uses"
          ],
          "properties": {
            "envs": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            },
            "outputs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "uses": {
              "type": "string"
            },
            "with": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BlackDuckStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlBlackduckToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BrakemanStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BranchBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "branch"
          ],
          "properties": {
            "branch": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BranchWebhookEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/WebhookEvent"
        },
        {
          "type": "object",
          "properties": {
            "baseAttributes": {
              "$ref": "#/definitions/WebhookBaseAttributes"
            },
            "branchName": {
              "type": "string"
            },
            "commitDetailsList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommitDetails"
              }
            },
            "link": {
              "type": "string"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Build": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "branch",
            "tag",
            "PR"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "PR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/PRBuildSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "branch"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BranchBuildSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "tag"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/TagBuildSpec"
              }
            }
          }
        }
      ]
    },
    "BuildJobEnvInfo": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "K8",
            "VM",
            "DOCKER"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BuildSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BurpStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "never-stop-crawl-due-to-application-errors",
                "never-stop-audit-due-to-application-errors",
                "minimize-false-positives",
                "minimize-false-negatives",
                "crawl-strategy-most-complete",
                "crawl-strategy-more-complete",
                "crawl-strategy-fastest",
                "crawl-strategy-faster",
                "crawl-limit-60-minutes",
                "crawl-limit-30-minutes",
                "crawl-limit-10-minutes",
                "crawl-and-audit-lightweight",
                "crawl-and-audit-fast",
                "crawl-and-audit-deep",
                "crawl-and-audit-balanced",
                "audit-coverage-thorough",
                "audit-coverage-maximum",
                "audit-checks-passive",
                "audit-checks-medium-active",
                "audit-checks-light-active",
                "audit-checks-critical-issues-only",
                "audit-checks-all-except-time-based-detection-methods",
                "audit-checks-all-except-java-script-analysis"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlBurpToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CIExecutionArgs": {
      "type": "object",
      "properties": {
        "executionSource": {
          "$ref": "#/definitions/ExecutionSource"
        },
        "runSequence": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CIServiceInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DependencySpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "image"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "connectorRef": {
              "type": "string"
            },
            "entrypoint": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "envVariables": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "portBindings": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "privileged": {
              "type": "boolean"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CIVolume": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EmptyDir",
            "PersistentVolumeClaim",
            "HostPath"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Caching": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "paths": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "drop": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CheckmarxStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlCheckmarxToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ClairStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CleanupStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "infrastructure",
            "podName"
          ],
          "properties": {
            "infrastructure": {
              "$ref": "#/definitions/Infrastructure"
            },
            "podName": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CloudRuntime": {
      "allOf": [
        {
          "$ref": "#/definitions/Runtime"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/CloudRuntimeSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "Cloud"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CloudRuntimeSpec": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CodeBase": {
      "type": "object",
      "required": [
        "build"
      ],
      "properties": {
        "build": {
          "$ref": "#/definitions/Build"
        },
        "connectorRef": {
          "type": "string"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "prCloneStrategy": {
          "type": "string",
          "enum": [
            "MergeCommit",
            "SourceBranch"
          ]
        },
        "repoName": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/ContainerResource"
        },
        "sslVerify": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CodeqlStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CommitDetails": {
      "type": "object",
      "properties": {
        "commitId": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ownerEmail": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorConversionInfo": {
      "type": "object",
      "properties": {
        "connectorRef": {
          "type": "string"
        },
        "envToSecretsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerDefinitionInfo": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerImageDetails": {
          "$ref": "#/definitions/ContainerImageDetails"
        },
        "containerResourceParams": {
          "$ref": "#/definitions/ContainerResourceParams"
        },
        "containerType": {
          "type": "string",
          "enum": [
            "STEP_EXECUTOR",
            "ADD_ON",
            "RUN",
            "PLUGIN",
            "SERVICE",
            "LITE_ENGINE",
            "TEST_INTELLIGENCE",
            "BACKGROUND"
          ]
        },
        "envVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "envVarsWithSecretRef": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "harnessManagedImage": {
          "type": "boolean"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "mainLiteEngine": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "privileged": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int32"
        },
        "secretVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretNGVariable"
          }
        },
        "stepIdentifier": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerImageDetails": {
      "type": "object",
      "properties": {
        "connectorIdentifier": {
          "type": "string"
        },
        "imageDetails": {
          "$ref": "#/definitions/ImageDetails"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerResource": {
      "type": "object",
      "required": [
        "limits"
      ],
      "properties": {
        "limits": {
          "$ref": "#/definitions/Limits"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerResourceParams": {
      "type": "object",
      "properties": {
        "resourceLimitMemoryMiB": {
          "type": "integer",
          "format": "int32"
        },
        "resourceLimitMilliCpu": {
          "type": "integer",
          "format": "int32"
        },
        "resourceRequestMemoryMiB": {
          "type": "integer",
          "format": "int32"
        },
        "resourceRequestMilliCpu": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CosignAttestation": {
      "allOf": [
        {
          "$ref": "#/definitions/AttestationSpec"
        },
        {
          "type": "object",
          "properties": {
            "password": {
              "type": "string"
            },
            "privateKey": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CosignVerifyAttestation": {
      "allOf": [
        {
          "$ref": "#/definitions/VerifyAttestationSpec"
        },
        {
          "type": "object",
          "properties": {
            "publicKey": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CustomExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "branch": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CustomIngestStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "sarif"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DataTheoremStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DependencyElement": {
      "type": "object",
      "required": [
        "identifier",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/DependencySpecType"
        },
        "type": {
          "type": "string",
          "enum": [
            "Service"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DependencySpecType": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerContentTrustStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerInfraSpec": {
      "type": "object",
      "required": [
        "platform"
      ],
      "properties": {
        "platform": {
          "$ref": "#/definitions/ParameterFieldPlatform"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/DockerInfraSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM",
                "KubernetesHosted"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerRuntime": {
      "allOf": [
        {
          "$ref": "#/definitions/Runtime"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/DockerRuntimeSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "Docker"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerRuntimeSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "repo",
            "tags"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "cacheFrom": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "cacheTo": {
              "type": "string"
            },
            "caching": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "remoteCacheRepo": {
              "type": "string"
            },
            "repo": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ECRStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "account",
            "connectorRef",
            "imageName",
            "region",
            "tags"
          ],
          "properties": {
            "account": {
              "type": "string"
            },
            "baseImageConnectorRefs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "cacheFrom": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "cacheTo": {
              "type": "string"
            },
            "caching": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "imageName": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "remoteCacheImage": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmptyDirVolume": {
      "allOf": [
        {
          "$ref": "#/definitions/PodVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "name"
          ],
          "properties": {
            "medium": {
              "type": "string"
            },
            "mountPath": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "sizeMib": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmptyDirYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/CIVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/EmptyDirYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmptyDirYamlSpec": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "pattern": "^(([0-9]*[.])?[0-9]+)([GM]i?)|<\\+input>$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EnforcementPolicy": {
      "type": "object",
      "properties": {
        "store": {
          "$ref": "#/definitions/PolicyStore"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionElementConfig": {
      "type": "object",
      "required": [
        "steps"
      ],
      "properties": {
        "rollbackSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionSource": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WEBHOOK",
            "MANUAL",
            "CUSTOM"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionWrapperConfig": {
      "type": "object",
      "properties": {
        "parallel": {
          "$ref": "#/definitions/ParallelStepElementConfig"
        },
        "step": {
          "$ref": "#/definitions/StepElementConfig"
        },
        "stepGroup": {
          "$ref": "#/definitions/StepGroupElementConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FailureStrategyActionConfig": {
      "type": "object",
      "required": [
        "type"
      ],
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Ignore",
            "Retry",
            "MarkAsSuccess",
            "Abort",
            "StageRollback",
            "StepGroupRollback",
            "PipelineRollback",
            "ManualIntervention",
            "ProceedWithDefaultValues",
            "MarkAsFailure"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FailureStrategyConfig": {
      "type": "object",
      "required": [
        "onFailure"
      ],
      "properties": {
        "onFailure": {
          "$ref": "#/definitions/OnFailureConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FortifyOnDemandStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlFODToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FossaStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlFossaToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GCRStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "host",
            "imageName",
            "projectID",
            "tags"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "imageName": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "projectID": {
              "type": "string"
            },
            "remoteCacheImage": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitCloneStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "build",
            "connectorRef"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "build": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Build"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "cloneDirectory": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "depth": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "projectName": {
              "type": "string"
            },
            "repoName": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sslVerify": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitleaksStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GrypeStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HarnessForConfig": {
      "type": "object",
      "properties": {
        "end": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "items": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "maxConcurrency": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "partitionSize": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "start": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "times": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "unit": {
          "type": "string",
          "enum": [
            "Percentage",
            "Count"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "times"
              ]
            },
            {
              "required": [
                "items"
              ]
            }
          ]
        }
      ]
    },
    "HarnessStore": {
      "allOf": [
        {
          "$ref": "#/definitions/StoreSpec"
        },
        {
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostPathVolume": {
      "allOf": [
        {
          "$ref": "#/definitions/PodVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "name",
            "path"
          ],
          "properties": {
            "hostPathType": {
              "type": "string"
            },
            "mountPath": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostPathYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/CIVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/HostPathYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostPathYamlSpec": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostedVmInfraSpec": {
      "type": "object",
      "required": [
        "platform"
      ],
      "properties": {
        "platform": {
          "$ref": "#/definitions/ParameterFieldPlatform"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostedVmInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/HostedVmInfraSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM",
                "KubernetesHosted"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IACMStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object"
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IACMTemplateInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object"
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IACMTerraformPlanInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "env": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tfVars": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringString"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IgnoreFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Ignore"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ImageDetails": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "registryUrl": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "usernameRef": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ImageSbomSource": {
      "allOf": [
        {
          "$ref": "#/definitions/SbomSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "connector": {
              "type": "string"
            },
            "image": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Infrastructure": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "KubernetesDirect",
            "UseFromStage",
            "VM",
            "KubernetesHosted"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "InitializeStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "executionElementConfig",
            "infrastructure",
            "skipGitClone"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "buildJobEnvInfo": {
              "$ref": "#/definitions/BuildJobEnvInfo"
            },
            "ciCodebase": {
              "$ref": "#/definitions/CodeBase"
            },
            "delegateSelectors": {
              "$ref": "#/definitions/ParameterFieldListTaskSelectorYaml"
            },
            "executionElementConfig": {
              "$ref": "#/definitions/ExecutionElementConfig"
            },
            "executionSource": {
              "$ref": "#/definitions/ExecutionSource"
            },
            "infrastructure": {
              "$ref": "#/definitions/Infrastructure"
            },
            "pipelineVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGVariable"
              }
            },
            "skipGitClone": {
              "type": "boolean"
            },
            "stageElementConfig": {
              "$ref": "#/definitions/IntegrationStageConfig"
            },
            "stageIdentifier": {
              "type": "string"
            },
            "strategyExpansionMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StrategyExpansionData"
              }
            },
            "variables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGVariable"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "InputSetValidator": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "string"
        },
        "validatorType": {
          "type": "string",
          "enum": [
            "ALLOWED_VALUES",
            "REGEX"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IntegrationStageConfig": {
      "type": "object",
      "properties": {
        "caching": {
          "$ref": "#/definitions/Caching"
        },
        "cloneCodebase": {
          "$ref": "#/definitions/ParameterFieldBoolean"
        },
        "execution": {
          "$ref": "#/definitions/ExecutionElementConfig"
        },
        "infrastructure": {
          "$ref": "#/definitions/Infrastructure"
        },
        "platform": {
          "$ref": "#/definitions/ParameterFieldPlatform"
        },
        "runtime": {
          "$ref": "#/definitions/Runtime"
        },
        "serviceDependencies": {
          "$ref": "#/definitions/ParameterFieldListDependencyElement"
        },
        "sharedPaths": {
          "$ref": "#/definitions/ParameterFieldListString"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IntegrationStageConfigImpl": {
      "type": "object",
      "properties": {
        "caching": {
          "oneOf": [
            {
              "$ref": "#/definitions/Caching"
            }
          ]
        },
        "cloneCodebase": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "execution": {
          "$ref": "#/definitions/ExecutionElementConfig"
        },
        "infrastructure": {
          "oneOf": [
            {
              "$ref": "#/definitions/DockerInfraYaml"
            },
            {
              "$ref": "#/definitions/HostedVmInfraYaml"
            },
            {
              "$ref": "#/definitions/K8sDirectInfraYaml"
            },
            {
              "$ref": "#/definitions/K8sHostedInfraYaml"
            },
            {
              "$ref": "#/definitions/UseFromStageInfraYaml"
            },
            {
              "$ref": "#/definitions/VmInfraYaml"
            }
          ]
        },
        "platform": {
          "oneOf": [
            {
              "$ref": "#/definitions/Platform"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runtime": {
          "oneOf": [
            {
              "$ref": "#/definitions/CloudRuntime"
            },
            {
              "$ref": "#/definitions/DockerRuntime"
            }
          ]
        },
        "serviceDependencies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DependencyElement"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "sharedPaths": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IntegrationStageNode": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "type"
      ],
      "properties": {
        "delegateSelectors": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "description": {
          "type": "string"
        },
        "failureStrategies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategyConfig"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
        },
        "pipelineVariables": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/NumberNGVariable"
              },
              {
                "$ref": "#/definitions/SecretNGVariable"
              },
              {
                "$ref": "#/definitions/StringNGVariable"
              }
            ]
          }
        },
        "strategy": {
          "oneOf": [
            {
              "$ref": "#/definitions/StrategyConfig"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "CI"
          ]
        },
        "variables": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/NumberNGVariable"
              },
              {
                "$ref": "#/definitions/SecretNGVariable"
              },
              {
                "$ref": "#/definitions/StringNGVariable"
              }
            ]
          }
        },
        "when": {
          "oneOf": [
            {
              "$ref": "#/definitions/StageWhenCondition"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "CI"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/IntegrationStageConfigImpl"
              }
            }
          }
        }
      ]
    },
    "JUnitTestReport": {
      "allOf": [
        {
          "$ref": "#/definitions/UnitTestReportSpec"
        },
        {
          "type": "object",
          "properties": {
            "paths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JfrogXrayStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JsonNode": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8BuildJobEnvInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildJobEnvInfo"
        },
        {
          "type": "object",
          "properties": {
            "podsSetupInfo": {
              "$ref": "#/definitions/PodsSetupInfo"
            },
            "stepConnectorRefs": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ConnectorConversionInfo"
                }
              }
            },
            "workDir": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sDirectInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/K8sDirectInfraYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM",
                "KubernetesHosted"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sDirectInfraYamlSpec": {
      "type": "object",
      "required": [
        "connectorRef",
        "namespace"
      ],
      "properties": {
        "annotations": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "automountServiceAccountToken": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "connectorRef": {
          "type": "string"
        },
        "containerSecurityContext": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContext"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "harnessImageConnectorRef": {
          "type": "string"
        },
        "hostNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "initTimeout": {
          "type": "string"
        },
        "labels": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "namespace": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "nodeSelector": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "os": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "MacOS",
                "Windows"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "priorityClassName": {
          "type": "string"
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        },
        "serviceAccountName": {
          "type": "string"
        },
        "tolerations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Toleration"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CIVolume"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sHostedInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/K8sHostedInfraYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM",
                "KubernetesHosted"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sHostedInfraYamlSpec": {
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Limits": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "memory": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "branch": {
              "type": "string"
            },
            "commitSha": {
              "type": "string"
            },
            "prNumber": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualFailureSpecConfig": {
      "type": "object",
      "required": [
        "onTimeout",
        "timeout"
      ],
      "properties": {
        "onTimeout": {
          "$ref": "#/definitions/OnTimeoutConfig"
        },
        "timeout": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualInterventionFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "readOnly": true,
              "$ref": "#/definitions/ManualFailureSpecConfig"
            },
            "type": {
              "type": "string",
              "enum": [
                "ManualIntervention"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MarkAsFailFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MarkAsFailure"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MarkAsSuccessFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MarkAsSuccess"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MatrixConfigInterface": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MendStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlMendToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MetasploitStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "metasploit-weak-ssh",
                "metasploit-openssl-heartbleed"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NGVariable": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "description": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "String",
            "Number",
            "Secret"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NessusStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusIQStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NiktoStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NmapStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "firewall-bypass",
                "unusual-port",
                "smb-security-mode",
                "exploit",
                "no-default-cli-flags"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NumberNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "number",
              "format": "double"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Number"
              ]
            },
            "value": {
              "oneOf": [
                {
                  "type": "number",
                  "format": "double"
                },
                {
                  "type": "string",
                  "pattern": "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnFailureConfig": {
      "type": "object",
      "required": [
        "action",
        "errors"
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Unknown",
              "AllErrors",
              "Authentication",
              "Connectivity",
              "Timeout",
              "Authorization",
              "Verification",
              "DelegateProvisioning",
              "PolicyEvaluationFailure",
              "InputTimeoutError",
              "ApprovalRejection",
              "DelegateRestart",
              "UserMarkedFailure"
            ]
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnRetryFailureConfig": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnTimeoutConfig": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OpenvasStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OutputNGVariable": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OwaspStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PRBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "number"
          ],
          "properties": {
            "number": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PRWebhookEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/WebhookEvent"
        },
        {
          "type": "object",
          "properties": {
            "baseAttributes": {
              "$ref": "#/definitions/WebhookBaseAttributes"
            },
            "closed": {
              "type": "boolean"
            },
            "commitDetailsList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommitDetails"
              }
            },
            "merged": {
              "type": "boolean"
            },
            "pullRequestBody": {
              "type": "string"
            },
            "pullRequestId": {
              "type": "integer",
              "format": "int64"
            },
            "pullRequestLink": {
              "type": "string"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "sourceBranch": {
              "type": "string"
            },
            "targetBranch": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PVCParams": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string"
        },
        "present": {
          "type": "boolean"
        },
        "sizeMib": {
          "type": "integer",
          "format": "int32"
        },
        "storageClass": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PVCVolume": {
      "allOf": [
        {
          "$ref": "#/definitions/PodVolume"
        },
        {
          "type": "object",
          "required": [
            "claimName",
            "mountPath",
            "name"
          ],
          "properties": {
            "claimName": {
              "type": "string"
            },
            "mountPath": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "readOnly": {
              "type": "boolean"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParallelStepElementConfig": {
      "type": "object",
      "required": [
        "sections"
      ],
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterField": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object"
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldBoolean": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "boolean"
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldListDependencyElement": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyElement"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyElement"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldListString": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldListTaskSelectorYaml": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSelectorYaml"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSelectorYaml"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldMapStringJsonNode": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldMapStringString": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldMatrixConfigInterface": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/MatrixConfigInterface"
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/MatrixConfigInterface"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldPlatform": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/Platform"
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/Platform"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldTILanguage": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string",
          "enum": [
            "Java",
            "Kotlin",
            "Scala",
            "Csharp",
            "Python"
          ]
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "string",
          "enum": [
            "Java",
            "Kotlin",
            "Scala",
            "Csharp",
            "Python"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PersistentVolumeClaimYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/CIVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/PersistentVolumeClaimYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PersistentVolumeClaimYamlSpec": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PipelineRollbackFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PipelineRollback"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Platform": {
      "type": "object",
      "properties": {
        "arch": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Amd64",
                "Arm64"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "os": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "MacOS",
                "Windows"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PluginStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "entrypoint": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "reports": {
              "oneOf": [
                {
                  "$ref": "#/definitions/UnitTestReport"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "uses": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PluginStepInfoV1": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "envs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "image": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "pull": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "always",
                    "never",
                    "if-not-exists"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "user": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "uses": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "with": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodSetupInfo": {
      "type": "object",
      "required": [
        "stageCpuRequest",
        "stageMemoryRequest",
        "volumeToMountPath"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "podSetupParams": {
          "$ref": "#/definitions/PodSetupParams"
        },
        "pvcParamsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PVCParams"
          }
        },
        "serviceGrpcPortList": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "serviceIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stageCpuRequest": {
          "type": "integer",
          "format": "int32"
        },
        "stageMemoryRequest": {
          "type": "integer",
          "format": "int32"
        },
        "volumeToMountPath": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodVolume"
          }
        },
        "workDirPath": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodSetupParams": {
      "type": "object",
      "properties": {
        "containerDefinitionInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerDefinitionInfo"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodVolume": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EmptyDir",
            "PersistentVolumeClaim",
            "HostPath"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodsSetupInfo": {
      "type": "object",
      "properties": {
        "podSetupInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodSetupInfo"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PolicyConfig": {
      "type": "object",
      "required": [
        "policySets"
      ],
      "properties": {
        "policySets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PolicyStore": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "harness"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "harness"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HarnessStore"
              }
            }
          }
        }
      ]
    },
    "PrismaCloudStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ProceedWithDefaultValuesFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ProceedWithDefaultValues"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ProwlerStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "hipaa",
                "gdpr",
                "exclude_extras"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "QualysStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ReapsawStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Repository": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "httpURL": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "slug": {
          "type": "string"
        },
        "sshURL": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RestoreCacheGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key"
          ],
          "properties": {
            "archiveFormat": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Tar",
                    "Gzip"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "failIfKeyNotFound": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "key": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RestoreCacheS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key"
          ],
          "properties": {
            "archiveFormat": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Tar",
                    "Gzip"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "failIfKeyNotFound": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "key": {
              "type": "string"
            },
            "pathStyle": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RetryFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "readOnly": true,
              "$ref": "#/definitions/RetryFailureSpecConfig"
            },
            "type": {
              "type": "string",
              "enum": [
                "Retry"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RetryFailureSpecConfig": {
      "type": "object",
      "required": [
        "onRetryFailure",
        "retryCount",
        "retryIntervals"
      ],
      "properties": {
        "onRetryFailure": {
          "$ref": "#/definitions/OnRetryFailureConfig"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "retryIntervals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RunStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "command"
          ],
          "properties": {
            "command": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "reports": {
              "oneOf": [
                {
                  "$ref": "#/definitions/UnitTestReport"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Sh",
                    "Bash",
                    "Powershell",
                    "Pwsh",
                    "Python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RunTestsStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "args",
            "buildTool",
            "language"
          ],
          "properties": {
            "args": {
              "type": "string"
            },
            "buildEnvironment": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Core",
                    "Framework"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "buildTool": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Maven",
                    "Bazel",
                    "Gradle",
                    "Dotnet",
                    "Nunitconsole",
                    "SBT",
                    "Pytest",
                    "Unittest"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "enableTestSplitting": {
              "type": "boolean"
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "frameworkVersion": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "5.0",
                    "6.0"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "language": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Java",
                    "Kotlin",
                    "Scala",
                    "Csharp",
                    "Python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "namespaces": {
              "type": "string"
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "packages": {
              "type": "string"
            },
            "postCommand": {
              "type": "string"
            },
            "preCommand": {
              "type": "string"
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "pythonVersion": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "3",
                    "2"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "reports": {
              "oneOf": [
                {
                  "$ref": "#/definitions/UnitTestReport"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "runOnlySelectedTests": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Sh",
                    "Bash",
                    "Powershell",
                    "Pwsh",
                    "Python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "testAnnotations": {
              "type": "string"
            },
            "testGlobs": {
              "type": "string"
            },
            "testRoot": {
              "type": "string"
            },
            "testSplitStrategy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ClassTiming",
                    "TestCount"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Runtime": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Docker",
            "Cloud"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlAdvancedSettings": {
      "type": "object",
      "properties": {
        "args": {
          "oneOf": [
            {
              "$ref": "#/definitions/STOYamlArgs"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "fail_on_severity": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "include_raw": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "log": {
          "oneOf": [
            {
              "$ref": "#/definitions/STOYamlLog"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlArgs": {
      "type": "object",
      "properties": {
        "cli": {
          "type": "string"
        },
        "passthrough": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlAuth": {
      "type": "object",
      "required": [
        "access_token"
      ],
      "properties": {
        "access_id": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "ssl": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "apiKey",
                "usernamePassword",
                "aws",
                "azure",
                "gcp"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "version": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlBlackduckToolData": {
      "type": "object",
      "properties": {
        "project_name": {
          "type": "string"
        },
        "project_version": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlBurpToolData": {
      "type": "object",
      "properties": {
        "scan_id": {
          "type": "string"
        },
        "site_id": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlCheckmarxToolData": {
      "type": "object",
      "properties": {
        "project_name": {
          "type": "string"
        },
        "team_name": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlFODToolData": {
      "type": "object",
      "properties": {
        "app_name": {
          "type": "string"
        },
        "audit_type": {
          "type": "string"
        },
        "data_center": {
          "type": "string"
        },
        "entitlement": {
          "type": "string"
        },
        "lookup_type": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "release_name": {
          "type": "string"
        },
        "scan_settings": {
          "type": "string"
        },
        "scan_type": {
          "type": "string"
        },
        "target_language": {
          "type": "string"
        },
        "target_language_version": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlFossaToolData": {
      "type": "object",
      "properties": {
        "policy_name": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "team_name": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlImage": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "access_id": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "aws_ecr",
                "docker_v2",
                "jfrog_artifactory",
                "local_image"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlIngestion": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlInstance": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "protocol": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlJavaParameters": {
      "type": "object",
      "properties": {
        "binaries": {
          "type": "string"
        },
        "libraries": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlLog": {
      "type": "object",
      "properties": {
        "level": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "info",
                "debug",
                "warning",
                "error"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "serializer": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "simple",
                "basic",
                "bunyan",
                "simple_onprem",
                "onprem"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlMendToolData": {
      "type": "object",
      "properties": {
        "exclude": {
          "type": "string"
        },
        "include": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "product_token": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "project_token": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlSonarqubeToolData": {
      "type": "object",
      "properties": {
        "exclude": {
          "type": "string"
        },
        "include": {
          "type": "string"
        },
        "java": {
          "oneOf": [
            {
              "$ref": "#/definitions/STOYamlJavaParameters"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "project_key": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlTarget": {
      "type": "object",
      "required": [
        "name",
        "type",
        "variant"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "repository",
                "container",
                "instance",
                "configuration"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "variant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlVeracodeToolData": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "STOYamlZapToolData": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "port": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SaveCacheGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key",
            "sourcePaths"
          ],
          "properties": {
            "archiveFormat": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Tar",
                    "Gzip"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "override": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePaths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SaveCacheS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key",
            "sourcePaths"
          ],
          "properties": {
            "archiveFormat": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Tar",
                    "Gzip"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "override": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "pathStyle": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePaths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SbomOrchestrationSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SbomOrchestrationTool": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Syft"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Syft"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SyftSbomOrchestration"
              }
            }
          }
        }
      ]
    },
    "SbomSource": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "image"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "image"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ImageSbomSource"
              }
            }
          }
        }
      ]
    },
    "SbomSourceSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ScriptStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "run"
          ],
          "properties": {
            "envs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "outputs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "pull": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "always",
                    "never",
                    "if-not-exists"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "run": {
              "type": "string"
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "sh",
                    "bash",
                    "powershell",
                    "pwsh",
                    "python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "user": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecretNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Secret"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecurityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "capabilities": {
          "$ref": "#/definitions/Capabilities"
        },
        "privileged": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsGroup": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsNonRoot": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecurityStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SemgrepStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShiftLeftStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SniperStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SnykStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SonarqubeStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlSonarqubeToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Splitting": {
      "type": "object",
      "properties": {
        "concurrency": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "strategy": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "class_timing",
            "test_count"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SscaEnforcementStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "policy",
            "source",
            "verifyAttestation"
          ],
          "properties": {
            "policy": {
              "$ref": "#/definitions/EnforcementPolicy"
            },
            "source": {
              "$ref": "#/definitions/SbomSource"
            },
            "verifyAttestation": {
              "$ref": "#/definitions/VerifyAttestation"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SscaOrchestrationStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "attestation",
            "source",
            "tool"
          ],
          "properties": {
            "attestation": {
              "$ref": "#/definitions/Attestation"
            },
            "source": {
              "$ref": "#/definitions/SbomSource"
            },
            "tool": {
              "$ref": "#/definitions/SbomOrchestrationTool"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StageRollbackFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StageRollback"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StageWhenCondition": {
      "type": "object",
      "required": [
        "pipelineStatus"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "pattern": "^(?!<\\+input>.*\\.executionInput\\(\\)(.*)$)"
        },
        "pipelineStatus": {
          "type": "string",
          "enum": [
            "Success",
            "Failure",
            "All"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepElementConfig": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "enforce": {
          "$ref": "#/definitions/PolicyConfig"
        },
        "failureStrategies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategyConfig"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
        },
        "strategy": {
          "oneOf": [
            {
              "$ref": "#/definitions/StrategyConfig"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "timeout": {
          "type": "string",
          "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
        },
        "type": {
          "type": "string"
        },
        "when": {
          "oneOf": [
            {
              "$ref": "#/definitions/StepWhenCondition"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "AWSECR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsEcrStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AWSSecurityHub"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsSecurityHubStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Action"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ActionStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AquaTrivy"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AquaTrivyStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ArtifactoryUpload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToArtifactoryStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Background"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BackgroundStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Bandit"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BanditStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Bitrise"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitriseStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BlackDuck"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BlackDuckStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Brakeman"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BrakemanStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushACR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ACRStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushDockerRegistry"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushECR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ECRStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushGCR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GCRStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Burp"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BurpStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Checkmarx"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CheckmarxStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Clair"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ClairStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CodeQL"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CodeqlStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CustomIngest"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CustomIngestStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "DataTheorem"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DataTheoremStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "DockerContentTrust"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerContentTrustStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "FortifyOnDemand"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/FortifyOnDemandStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Fossa"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/FossaStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "GCSUpload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "GitClone"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitCloneStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Gitleaks"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitleaksStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Grype"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GrypeStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "IACM"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/IACMStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "IACMTemplate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/IACMTemplateInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "IACMTerraformPlan"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/IACMTerraformPlanInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "JfrogXray"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JfrogXrayStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Mend"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/MendStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Metasploit"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/MetasploitStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Nessus"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NessusStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "NexusIQ"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NexusIQStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Nikto"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NiktoStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Nmap"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NmapStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Openvas"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/OpenvasStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Owasp"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/OwaspStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Plugin"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/PluginStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "PrismaCloud"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/PrismaCloudStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Prowler"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ProwlerStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Qualys"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/QualysStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Reapsaw"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ReapsawStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RestoreCacheGCS"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RestoreCacheGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RestoreCacheS3"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RestoreCacheS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Run"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RunStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RunTests"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RunTestsStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "S3Upload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SaveCacheGCS"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SaveCacheGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SaveCacheS3"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SaveCacheS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Security"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SecurityStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Semgrep"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SemgrepStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ShiftLeft"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ShiftLeftStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Sniper"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SniperStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Snyk"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SnykStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Sonarqube"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SonarqubeStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SscaEnforcement"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SscaEnforcementStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SscaOrchestration"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SscaOrchestrationStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Sysdig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SysdigStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Tenable"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/TenableStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Veracode"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/VeracodeStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Zap"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ZapStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "action"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ActionStepInfoV1"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "background"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BackgroundStepInfoV1"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "bitrise"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitriseStepInfoV1"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "plugin"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/PluginStepInfoV1"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "script"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ScriptStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "test"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/TestStepInfo"
              }
            }
          }
        }
      ]
    },
    "StepGroupElementConfig": {
      "type": "object",
      "required": [
        "identifier",
        "name"
      ],
      "properties": {
        "delegateSelectors": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "failureStrategies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategyConfig"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "strategy": {
          "oneOf": [
            {
              "$ref": "#/definitions/StrategyConfig"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        },
        "template": {
          "$ref": "#/definitions/TemplateLinkConfig"
        },
        "when": {
          "oneOf": [
            {
              "$ref": "#/definitions/StepWhenCondition"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "template"
              ]
            },
            {
              "required": [
                "steps"
              ]
            }
          ]
        }
      ]
    },
    "StepGroupFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StepGroupRollback"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepSpecType": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepWhenCondition": {
      "type": "object",
      "required": [
        "stageStatus"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "pattern": "^(?!<\\+input>.*\\.executionInput\\(\\)(.*)$)"
        },
        "stageStatus": {
          "type": "string",
          "enum": [
            "Success",
            "Failure",
            "All"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StoreSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StrategyConfig": {
      "type": "object",
      "properties": {
        "matrix": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParameterFieldMatrixConfigInterface"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "parallelism": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            {
              "type": "string",
              "pattern": "(<\\+.+>.*)",
              "minLength": 1
            }
          ]
        },
        "repeat": {
          "$ref": "#/definitions/HarnessForConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "repeat"
              ]
            },
            {
              "required": [
                "parallelism"
              ]
            },
            {
              "required": [
                "matrix"
              ]
            }
          ]
        }
      ]
    },
    "StrategyExpansionData": {
      "type": "object",
      "properties": {
        "maxConcurrency": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StringNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SyftSbomOrchestration": {
      "allOf": [
        {
          "$ref": "#/definitions/SbomOrchestrationSpec"
        },
        {
          "type": "object",
          "properties": {
            "format": {
              "type": "string",
              "enum": [
                "spdx-json"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SysdigStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "image": {
              "$ref": "#/definitions/STOYamlImage"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TagBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "tag"
          ],
          "properties": {
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TaskSelectorYaml": {
      "type": "object",
      "properties": {
        "delegateSelectors": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TemplateLinkConfig": {
      "type": "object",
      "required": [
        "templateRef"
      ],
      "properties": {
        "templateInputs": {
          "$ref": "#/definitions/JsonNode"
        },
        "templateRef": {
          "type": "string"
        },
        "templateVariables": {
          "$ref": "#/definitions/JsonNode"
        },
        "versionLabel": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z][^\\s]{0,63}$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TenableStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TestStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "properties": {
            "envs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "language": {
              "$ref": "#/definitions/ParameterFieldTILanguage"
            },
            "outputs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "pull": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "always",
                    "never",
                    "if-not-exists"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "sh",
                    "bash",
                    "powershell",
                    "pwsh",
                    "python"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "splitting": {
              "$ref": "#/definitions/Splitting"
            },
            "user": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "uses": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "maven",
                    "bazel",
                    "gradle",
                    "dotnet",
                    "nunit_console",
                    "sbt",
                    "pytest",
                    "unittest"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "with": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/JsonNode"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UnitTestReport": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JUnit"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "JUnit"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JUnitTestReport"
              }
            }
          }
        }
      ]
    },
    "UnitTestReportSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToArtifactoryStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "sourcePath",
            "target"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "connectorRef": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "sourcePath"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "region",
            "sourcePath"
          ],
          "properties": {
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "stripPrefix": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UseFromStageInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "useFromStage"
          ],
          "properties": {
            "useFromStage": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VeracodeStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "auth": {
              "$ref": "#/definitions/STOYamlAuth"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlVeracodeToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VerifyAttestation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "cosign"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "cosign"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CosignVerifyAttestation"
              }
            }
          }
        }
      ]
    },
    "VerifyAttestationSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmBuildJobInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildJobEnvInfo"
        },
        {
          "type": "object",
          "properties": {
            "ciExecutionArgs": {
              "$ref": "#/definitions/CIExecutionArgs"
            },
            "connectorRefs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "serviceDependencies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DependencyElement"
              }
            },
            "stageVars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGVariable"
              }
            },
            "volToMountPath": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "workDir": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmInfraSpec": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Pool"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "oneOf": [
                {
                  "$ref": "#/definitions/VmPoolYaml"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM",
                "KubernetesHosted"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmPoolYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/VmInfraSpec"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/VmPoolYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "Pool"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmPoolYamlSpec": {
      "type": "object",
      "properties": {
        "harnessImageConnectorRef": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "initTimeout": {
          "type": "string"
        },
        "os": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "MacOS",
                "Windows"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "poolName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookBaseAttributes": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "authorAvatar": {
          "type": "string"
        },
        "authorEmail": {
          "type": "string"
        },
        "authorLogin": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "before": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "mergeSha": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookEvent": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PR",
            "BRANCH"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "triggerName": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/WebhookGitUser"
            },
            "webhookEvent": {
              "$ref": "#/definitions/WebhookEvent"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookGitUser": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gitId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ZapStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "config",
            "mode",
            "target"
          ],
          "properties": {
            "advanced": {
              "$ref": "#/definitions/STOYamlAdvancedSettings"
            },
            "baseImageConnectorRefs": {
              "$ref": "#/definitions/ParameterFieldListString"
            },
            "config": {
              "type": "string",
              "enum": [
                "default",
                "quick",
                "attack",
                "standard"
              ]
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "(<\\+.+>.*)",
                  "minLength": 1
                }
              ]
            },
            "ingestion": {
              "$ref": "#/definitions/STOYamlIngestion"
            },
            "instance": {
              "$ref": "#/definitions/STOYamlInstance"
            },
            "mode": {
              "type": "string",
              "enum": [
                "ingestion",
                "orchestration",
                "extraction"
              ]
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "$ref": "#/definitions/STOYamlTarget"
            },
            "tool": {
              "$ref": "#/definitions/STOYamlZapToolData"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
}